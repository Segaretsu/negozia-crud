{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/usuarios/usuarios.component.ts","webpack:///src/app/components/usuarios/usuarios.component.html","webpack:///src/app/models/tipo-telefono.ts","webpack:///src/app/models/usuario.ts","webpack:///src/app/services/tipo-telefono.service.ts","webpack:///src/app/services/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","UsuariosComponent","usuarioService","tipoTelefonoService","getListaTipoTelefonos","subscribe","res","listaTipoTelefonos","getUsuarios","form","validarUsuario","value","_id","modificarUsuario","limpiarFormulario","M","toast","html","classes","addUsuario","listaUsuarios","usuario","usuarioSeleccionado","confirm","eliminarUsuario","reset","console","log","eliminarEspaciosLaterales","nombres","length","apellidos","sexo","telefono","toString","tipoTelefono","correo","test","trim","error","onItemChange","TipoTelefono","nombre","Usuario","TipoTelefonoService","http","URL_API","tipoTelefonoActual","get","post","put","providedIn","UsuarioService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<nav class=\"nav-wrapper blue\">\r\n  <div class=\"container\">\r\n    <a href=\"/\" class=\"brand-logo\">Negozia - crud</a>\r\n  </div>\r\n</nav>\r\n\r\n<app-usuarios></app-usuarios>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UsuariosComponent } from './components/usuarios/usuarios.component';\r\nimport { from } from 'rxjs';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UsuariosComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UsuarioService } from '../../services/usuario.service';\r\nimport { TipoTelefonoService } from '../../services/tipo-telefono.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Usuario } from 'src/app/models/usuario';\r\nimport { TipoTelefono } from 'src/app/models/tipo-telefono';\r\n\r\ndeclare var M: any; // Declaramos una variable de Materialize\r\n\r\n@Component({\r\n  selector: 'app-usuarios',\r\n  templateUrl: './usuarios.component.html',\r\n  styleUrls: ['./usuarios.component.css'],\r\n  providers: [UsuarioService]\r\n})\r\nexport class UsuariosComponent implements OnInit {\r\n\r\n  constructor(public usuarioService: UsuarioService, public tipoTelefonoService: TipoTelefonoService) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.tipoTelefonoService.getListaTipoTelefonos().subscribe(res => {\r\n      this.tipoTelefonoService.listaTipoTelefonos = res as TipoTelefono[];\r\n    });\r\n    this.getUsuarios();\r\n  }\r\n\r\n  addUsuario(form: NgForm){\r\n    if(this.validarUsuario(form.value)) {\r\n      if(form.value._id){\r\n        this.usuarioService.modificarUsuario(form.value)\r\n        .subscribe(res => {\r\n          this.limpiarFormulario(form);\r\n          M.toast({html:'Updated successfuly', classes:'green'});\r\n          this.getUsuarios();\r\n        });\r\n      } else {\r\n        this.usuarioService.addUsuario(form.value)\r\n        .subscribe(res => {\r\n          this.limpiarFormulario(form);\r\n          M.toast({html:'save successfuly', classes:'green'});\r\n          this.getUsuarios();\r\n        }); // Nos sirve para saber que retorna el servidor\r\n      }\r\n    } else {\r\n      M.toast({html:'validate the information', classes:'red'});\r\n    }\r\n  }\r\n\r\n  getUsuarios(){\r\n    this.usuarioService.getUsuarios().subscribe( res => {\r\n      this.usuarioService.listaUsuarios = res as Usuario[];\r\n    }\r\n    );\r\n  }\r\n\r\n  modificarUsuario (usuario: Usuario) {\r\n    this.usuarioService.usuarioSeleccionado = usuario;\r\n  }\r\n\r\n  eliminarUsuario (_id: string) {\r\n    if(confirm('Are you sure you want to delete it?')){\r\n      this.usuarioService.eliminarUsuario(_id)\r\n        .subscribe(res => {\r\n          this.getUsuarios();\r\n          M.toast({html: 'User deleted successfully', classes:'red'});\r\n        });\r\n    }\r\n  }\r\n\r\n  limpiarFormulario (form?: NgForm) {\r\n    if (form) {\r\n      form.reset();\r\n      this.usuarioService.usuarioSeleccionado = new Usuario();\r\n    }\r\n  }\r\n\r\n  /* Validaciones de usuario */\r\n  onItemChange(value){\r\n    console.log(\" Value is : \", value );\r\n  }\r\n\r\n  validarUsuario (usuario: Usuario) {\r\n    this.eliminarEspaciosLaterales(usuario);\r\n    if(usuario.nombres && usuario.nombres.length < 50){\r\n      if(usuario.apellidos && usuario.apellidos.length < 50){\r\n         if(usuario.sexo){\r\n           if(usuario.telefono && usuario.telefono.toString().length < 12 && usuario.telefono != 0){\r\n            if(usuario.tipoTelefono){\r\n              if(usuario.correo){\r\n                if(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(usuario.correo)){\r\n                  return true;\r\n                }\r\n              }\r\n            }\r\n           }\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  eliminarEspaciosLaterales(usuario: Usuario){\r\n    try {\r\n      usuario.nombres.trim();\r\n      usuario.apellidos.trim();\r\n      usuario.sexo.trim();\r\n      usuario.tipoTelefono.trim();\r\n    } catch (error) {}\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col s12 m12 l5\">\r\n            <div class=\"card\">\r\n                <div class=\"card-content\">\r\n                    <h6>Personal information</h6>\r\n                    <form #usuarioForm=\"ngForm\" (ngSubmit)=\"addUsuario(usuarioForm)\">\r\n                        <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\"\r\n                            [(ngModel)]=\"usuarioService.usuarioSeleccionado._id\">\r\n                        <div class=\"row\">\r\n                            <div class=\"input-field col s12\">\r\n                                <input type=\"text\" class=\"validate\" data-length=\"50\" id=\"nombres\" name=\"nombres\" #nombres=\"ngModel\"\r\n                                    [(ngModel)]=\"usuarioService.usuarioSeleccionado.nombres\"\r\n                                    placeholder=\"Armando Esteban\" required=\"\" aria-required=\"true\">\r\n                                <label for=\"nombres\">First name:</label>\r\n                                <span class=\"helper-text\" data-error=\"validates if the field is empty or very long first name (50)\" data-success=\"\"></span>\r\n                            </div>\r\n                            <div class=\"input-field col s12\">\r\n                                <input type=\"text\" class=\"validate\" id=\"apellidos\" name=\"apellidos\" #apellidos=\"ngModel\"\r\n                                    [(ngModel)]=\"usuarioService.usuarioSeleccionado.apellidos\"\r\n                                    placeholder=\"Quito zapata\" required=\"\" aria-required=\"true\">\r\n                                <label for=\"apellidos\">Last name</label>\r\n                                <span class=\"helper-text\" data-error=\"validates if the field is empty or very long first name (50)\" data-success=\"\"></span>\r\n                            </div>\r\n                            <div class=\"input-field col s12\">\r\n                                <label for=\"sexo\">Sex:</label>\r\n                            </div>\r\n                            <div class=\"input-field col s12 m3\">\r\n                                <p>\r\n                                    <label>\r\n                                      <input id=\"sexo\" class=\"validate\" name=\"sexo\" type=\"radio\" value=\"M\" \r\n                                      [(ngModel)]=\"usuarioService.usuarioSeleccionado.sexo\" [checked]=\"true\"\r\n                                      (change)=\"onItemChange($event.target.value)\"  required=\"\" aria-required=\"true\"/>\r\n                                      <span>Male</span>\r\n                                    </label>\r\n                                </p>\r\n                            </div>\r\n                            <div class=\"input-field col s12 m3\">\r\n                                <p>\r\n                                    <label>\r\n                                      <input id=\"sexo\" class=\"validate\" name=\"sexo\" type=\"radio\" value=\"F\"\r\n                                      [(ngModel)]=\"usuarioService.usuarioSeleccionado.sexo\" [checked]=\"true\"\r\n                                      (change)=\"onItemChange($event.target.value)\"  required=\"\" aria-required=\"true\"/>\r\n                                      <span>Female</span>\r\n                                    </label>\r\n                                  </p>\r\n                            </div>\r\n                            <span class=\"helper-text\" data-error=\"Field is empty\" data-success=\"\"></span>\r\n                            <div class=\"input-field col s12\">\r\n                                <input type=\"number\" class=\"validate\" id=\"telefono\" name=\"telefono\" #telefono=\"ngModel\" data-length=\"12\"\r\n                                    [(ngModel)]=\"usuarioService.usuarioSeleccionado.telefono\" placeholder=\"123456\"  required=\"\" aria-required=\"true\">\r\n                                <label for=\"telefono\">Phone:</label>\r\n                                <span class=\"helper-text\" data-error=\"Field is empty or very long first name (12 max)\" data-success=\"\"></span>\r\n                            </div>\r\n                            <div class=\"input-field col s12 m4\">\r\n                                <label for=\"telefonos\">Phone type:</label>\r\n                            </div>\r\n                            <div class=\"input-field col s12 m8\">\r\n                                <select class=\"browser-default validate\" id=\"tipoTelefono\" name=\"tipoTelefono\" #tipoTelefono=\"ngModel\"\r\n                                [(ngModel)]=\"usuarioService.usuarioSeleccionado.tipoTelefono\" required=\"\" aria-required=\"true\">\r\n                                    <option value=\"\" disabled selected>Choose your type phone</option>\r\n                                    <option *ngFor=\"let typeTel of tipoTelefonoService.listaTipoTelefonos\" \r\n                                        value=\"{{typeTel.nombre}}\">{{typeTel.nombre}}</option>\r\n                                </select>\r\n                                <span class=\"helper-text\" data-error=\"No option choose\" data-success=\"\"></span>\r\n                            </div>\r\n                            <div class=\"input-field col s12\">\r\n                                <input type=\"email\" class=\"validate\" id=\"correo\" name=\"correo\" #correo=\"ngModel\"\r\n                                    [(ngModel)]=\"usuarioService.usuarioSeleccionado.correo\"\r\n                                    placeholder=\"ejemplo@dominiox.com\">\r\n                                <label for=\"correo\">Mail:</label>\r\n                                <span class=\"helper-text\" data-error=\"Invalid mail\" data-success=\"\"></span>\r\n                            </div>\r\n                            <div class=\"card-action\">\r\n                                <div class=\"input-field col s12\">\r\n                                    <button class=\"btn right waves-effect waves-light\" type=\"submit\">save</button>\r\n                                    <button class=\"btn button button-secundario\" (click)=\"limpiarFormulario(usuarioForm)\">clean</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col s12 m12 l7\">\r\n            <div class=\"row\">\r\n                <h6>List of registered users</h6>\r\n                <div class=\"col s12 m6\" *ngFor=\"let us of usuarioService.listaUsuarios\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-content\">\r\n                          <span class=\"card-title activator grey-text text-darken-4\">{{ us.nombres }} {{ us.apellidos }}<i class=\"material-icons right\">more_vert</i></span>\r\n                          <p><strong>Mail:</strong> {{ us.correo }} </p>\r\n                          <p><strong>{{ us.tipoTelefono }} phone:</strong> {{ us.telefono }} </p>\r\n                          <p><strong>Sex:</strong> {{ us.sexo }} </p>\r\n                        </div>\r\n                        <div class=\"card-reveal\">\r\n                          <span class=\"card-title grey-text text-darken-4\">Operations<i class=\"material-icons right\">close</i></span>\r\n                          <p>What actions do you want to take?</p>\r\n                          <a (click)=\"modificarUsuario(us)\">\r\n                            <span class=\"material-icons\">\r\n                                edit\r\n                            </span>\r\n                            </a>\r\n                            <a (click)=\"eliminarUsuario(us._id)\">\r\n                                <span class=\"material-icons\" style=\"color: red;\">\r\n                                    delete\r\n                                </span>\r\n                            </a>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n            </div>    \r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<footer class=\"page-footer footer-bottom\">\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col l6 s12\">\r\n          <h5 class=\"white-text\">Negozia - crud in MEAN</h5>\r\n          <p class=\"grey-text text-lighten-4\">this crud Made by <strong><a class=\"grey-text text-lighten-4 right\" target=\"_blank\" href=\"http://www.linkedin.com/in/jhonsas\">Sebastian Agudelo</a></strong></p>\r\n        </div>\r\n        <div class=\"col l4 offset-l2 s12\">\r\n          <h5 class=\"white-text\">Repositories</h5>\r\n          <ul>\r\n            <li><a class=\"grey-text text-lighten-3\" target=\"_blank\" href=\"https://github.com/Segaretsu/negozia-crud.git\">Github - app</a></li>\r\n            <li><a class=\"grey-text text-lighten-3\" target=\"_blank\" href=\"https://github.com/Segaretsu/negozia-crud-automation\">Github - Automation</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"footer-copyright\">\r\n      <div class=\"container\">\r\n      © 2020 Copyright - version 1.0\r\n      </div>\r\n    </div>\r\n</footer>","export class TipoTelefono {\r\n    _id:string;\r\n    nombre:string;\r\n\r\n    constructor(_id = '', nombre=''){\r\n        this._id = _id;\r\n        this.nombre = nombre;\r\n    }\r\n}\r\n","export class Usuario {\r\n    _id: String;\r\n    nombres: string;\r\n    apellidos: string;\r\n    sexo: string;\r\n    telefono: number;\r\n    tipoTelefono: string;\r\n    correo: string;\r\n\r\n    constructor(_id = '', nombres = '', apellidos = '',\r\n     sexo = '', telefono = 0, tipoTelefono = '', correo = '') {\r\n        this._id = _id;\r\n        this.nombres = nombres;\r\n        this.apellidos = apellidos;\r\n        this.sexo = sexo;\r\n        this.telefono = telefono;\r\n        this.tipoTelefono = tipoTelefono;\r\n        this.correo = correo;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TipoTelefono } from '../models/tipo-telefono';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TipoTelefonoService {\r\n\r\n  tipoTelefonoActual: TipoTelefono;\r\n  listaTipoTelefonos: TipoTelefono[];\r\n  readonly URL_API = 'https://negozia-crud.herokuapp.com/negoziaback/tipoTelefonos';\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.tipoTelefonoActual = new TipoTelefono();\r\n  }\r\n\r\n  getListaTipoTelefonos () {\r\n    return this.http.get(this.URL_API);\r\n  }\r\n\r\n  addTipoTelefono (telefono: TipoTelefono) {\r\n    return this.http.post(this.URL_API, telefono);\r\n  }\r\n\r\n  modificarTipoTelefono (telefono: TipoTelefono) {\r\n    return this.http.put(this.URL_API + `/${telefono._id}`, telefono);\r\n  }\r\n\r\n  eliminarUsuario (_id: string) {\r\n    return this.http.delete(this.URL_API + `/${_id}`)\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Usuario } from '../models/usuario';\r\nimport { UsuariosComponent } from '../components/usuarios/usuarios.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuarioService {\r\n\r\n  usuarioSeleccionado: Usuario;\r\n  listaUsuarios: Usuario[];\r\n  readonly URL_API = 'https://negozia-crud.herokuapp.com/negoziaback/usuarios';\r\n\r\n  constructor(private http: HttpClient) { \r\n    this.usuarioSeleccionado = new Usuario();\r\n  }\r\n\r\n  getUsuarios () {\r\n    return this.http.get(this.URL_API);\r\n  }\r\n\r\n  addUsuario (Usuario: Usuario) {\r\n    return this.http.post(this.URL_API, Usuario);\r\n  }\r\n\r\n  modificarUsuario (Usuario: Usuario) {\r\n    return this.http.put(this.URL_API + `/${Usuario._id}`, Usuario);\r\n  }\r\n\r\n  eliminarUsuario (_id: string) {\r\n    return this.http.delete(this.URL_API + `/${_id}`)\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}